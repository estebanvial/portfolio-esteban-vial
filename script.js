// Configuration Formspree
window.FORMSPREE_ID = 'xpwyzeqw';

// Configuration et initialisation
document.addEventListener('DOMContentLoaded', function() {
    // V√©rification que toutes les sections existent
    const sections = ['accueil', 'about', 'skills', 'experience', 'projects', 'cv', 'certifications', 'contact'];
    sections.forEach(function(sectionId) {
        const section = document.getElementById(sectionId);
        if (!section) {
            console.warn('Section manquante:', sectionId);
        } else {
            console.log('Section trouv√©e:', sectionId);
        }
    });

    initializeTypingAnimation();
    initializeScrollAnimations();
    initializeSkillBars();
    initializeNavigation();
    initializeScrollIndicator();
    initializeBackToTop();
    initializeContactForm();
    initializeProjectModals();
    initializeThemeToggle();
    initializeCVDownload();
});

// Animation de typing pour le hero
function initializeTypingAnimation() {
    const typingText = document.getElementById('typingText');
    if (!typingText) return;
    
    const phrases = [
        'Sp√©cialiste Administration R√©seau üîß',
        'Futur Expert Cybers√©curit√© üõ°Ô∏è',
        '3 ans d\'exp√©rience en alternance üíº',
        'En recherche d\'alternance Master üéØ'
    ];
    
    let phraseIndex = 0;
    let charIndex = 0;
    let isDeleting = false;
    
    function typeAnimation() {
        const currentPhrase = phrases[phraseIndex];
        
        if (isDeleting) {
            typingText.textContent = currentPhrase.substring(0, charIndex - 1);
            charIndex--;
        } else {
            typingText.textContent = currentPhrase.substring(0, charIndex + 1);
            charIndex++;
        }
        
        if (!isDeleting && charIndex === currentPhrase.length) {
            setTimeout(function() { isDeleting = true; }, 2000);
        } else if (isDeleting && charIndex === 0) {
            isDeleting = false;
            phraseIndex = (phraseIndex + 1) % phrases.length;
        }
        
        const speed = isDeleting ? 50 : 100;
        setTimeout(typeAnimation, speed);
    }
    
    typeAnimation();
}

// Smooth scrolling pour les liens
function initializeNavigation() {
    // Smooth scrolling pour tous les liens d'ancrage
    document.querySelectorAll('a[href^="#"]').forEach(function(anchor) {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const targetId = this.getAttribute('href').substring(1);
            const target = document.getElementById(targetId);
            
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
                
                // Fermer le menu mobile si ouvert
                const navLinks = document.querySelector('.nav-links');
                if (navLinks && navLinks.classList.contains('mobile-active')) {
                    navLinks.classList.remove('mobile-active');
                }
            }
        });
    });
    
    // Navigation active selon la section
    const sections = document.querySelectorAll('.section, .hero');
    const navLinks = document.querySelectorAll('.nav-links a');
    
    window.addEventListener('scroll', function() {
        // Mise √† jour du menu actif
        let current = '';
        sections.forEach(function(section) {
            const sectionTop = section.offsetTop;
            if (window.scrollY >= (sectionTop - 200)) {
                current = section.getAttribute('id');
            }
        });
        
        navLinks.forEach(function(link) {
            link.classList.remove('active');
            if (link.getAttribute('href') === '#' + current) {
                link.classList.add('active');
            }
        });
        
        // Changement de style de la nav selon le scroll
        const nav = document.querySelector('nav');
        if (nav) {
            if (window.scrollY > 100) {
                nav.style.background = 'rgba(10, 10, 10, 0.95)';
            } else {
                nav.style.background = 'rgba(10, 10, 10, 0.9)';
            }
        }
    });
}

// Animations de scroll (fade-in)
function initializeScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(function(entry) {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
            }
        });
    }, observerOptions);
    
    document.querySelectorAll('.fade-in').forEach(function(el) {
        observer.observe(el);
    });
}

// Animation des barres de comp√©tences
function initializeSkillBars() {
    const skillBars = document.querySelectorAll('.skill-progress');
    
    const skillObserver = new IntersectionObserver(function(entries) {
        entries.forEach(function(entry) {
            if (entry.isIntersecting) {
                const skillBar = entry.target;
                const width = skillBar.style.width;
                skillBar.style.width = '0%';
                setTimeout(function() {
                    skillBar.style.width = width;
                }, 300);
            }
        });
    }, { threshold: 0.5 });
    
    skillBars.forEach(function(bar) {
        skillObserver.observe(bar);
    });
}

// Indicateur de progression du scroll
function initializeScrollIndicator() {
    const scrollIndicator = document.getElementById('scrollIndicator');
    if (!scrollIndicator) return;
    
    window.addEventListener('scroll', function() {
        const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
        const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
        const scrolled = (winScroll / height) * 100;
        scrollIndicator.style.width = scrolled + '%';
    });
}

// Bouton retour en haut
function initializeBackToTop() {
    const backToTopBtn = document.getElementById('backToTop');
    if (!backToTopBtn) return;
    
    window.addEventListener('scroll', function() {
        if (window.pageYOffset > 300) {
            backToTopBtn.classList.add('visible');
        } else {
            backToTopBtn.classList.remove('visible');
        }
    });
    
    backToTopBtn.addEventListener('click', function() {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });
}

// Fonction de t√©l√©chargement du CV existant
function initializeCVDownload() {
    window.downloadCV = function(event) {
        event.preventDefault();
        
        const btn = event.target.closest('button') || event.target.closest('a');
        const originalText = btn.innerHTML;
        
        // Animation de t√©l√©chargement
        btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> T√©l√©chargement...';
        btn.disabled = true;
        
        // Cr√©er un lien de t√©l√©chargement
        const link = document.createElement('a');
        link.href = './assets/CV_Esteban_Vial-Montpellier.pdf'; // Chemin vers votre CV
        link.download = 'CV_Esteban_Vial-Montpellier.pdf';
        link.style.display = 'none';
        
        // Ajouter au DOM, cliquer, puis supprimer
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        // Feedback utilisateur
        btn.innerHTML = '<i class="fas fa-check"></i> CV t√©l√©charg√© !';
        showNotification('CV t√©l√©charg√© avec succ√®s !', 'success');
        
        // Retour √† l'√©tat initial
        setTimeout(function() {
            btn.innerHTML = originalText;
            btn.disabled = false;
        }, 2000);
    };

    // Fonction d'impression du CV depuis la page
    window.printCV = function() {
        const cvContainer = document.getElementById('cvContainer');
        if (!cvContainer) return;
        
        // Cr√©er une nouvelle fen√™tre pour l'impression
        const printWindow = window.open('', '_blank');
        
        printWindow.document.write(`
            <!DOCTYPE html>
            <html>
            <head>
                <title>CV - Esteban Vial-Montpellier</title>
                <style>
                    body { 
                        font-family: Arial, sans-serif; 
                        margin: 0; 
                        padding: 20px;
                        color: #333;
                        background: white;
                    }
                    .cv-container {
                        max-width: 800px;
                        margin: 0 auto;
                    }
                    .cv-section {
                        margin-bottom: 20px;
                        padding: 15px;
                        page-break-inside: avoid;
                    }
                    .cv-header-section {
                        border-bottom: 2px solid #0066ff;
                        padding-bottom: 15px;
                    }
                    h1 { color: #0066ff; font-size: 24px; margin-bottom: 5px; }
                    h2 { color: #00d4ff; font-size: 18px; margin-bottom: 10px; }
                    h3 { color: #0066ff; font-size: 16px; border-bottom: 1px solid #0066ff; padding-bottom: 5px; }
                    h4 { color: #333; font-size: 14px; margin-bottom: 8px; }
                    .cv-tag {
                        background: #0066ff;
                        color: white;
                        padding: 3px 8px;
                        border-radius: 12px;
                        font-size: 12px;
                        margin-right: 5px;
                        display: inline-block;
                        margin-bottom: 3px;
                    }
                    .cv-contact-item {
                        margin: 5px 0;
                        font-size: 14px;
                    }
                    ul { padding-left: 20px; }
                    li { margin: 5px 0; font-size: 14px; }
                    .cv-company { color: #00d4ff; font-weight: bold; }
                    .cv-date { color: #666; font-size: 12px; }
                    .alternance-details {
                        background: #f0f8ff;
                        padding: 15px;
                        border-left: 4px solid #00d4ff;
                        margin: 10px 0;
                    }
                    @media print {
                        body { margin: 0; }
                        .cv-section { page-break-inside: avoid; }
                    }
                </style>
            </head>
            <body>
                <div class="cv-container">
                    ${cvContainer.innerHTML}
                </div>
            </body>
            </html>
        `);
        
        printWindow.document.close();
        
        // Attendre que le contenu soit charg√© puis imprimer
        printWindow.onload = function() {
            printWindow.print();
        };
    };
}

// Formulaire de contact avec Formspree
function initializeContactForm() {
    const contactForm = document.getElementById('contactForm');
    if (!contactForm) return;
    
    contactForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const btn = this.querySelector('button[type="submit"]');
        const originalText = btn.innerHTML;
        
        // R√©cup√©rer les donn√©es du formulaire
        const formData = {
            name: document.getElementById('name').value.trim(),
            email: document.getElementById('email').value.trim(),
            subject: document.getElementById('subject').value.trim(),
            message: document.getElementById('message').value.trim()
        };
        
        // Validation simple
        if (!formData.name || !formData.email || !formData.subject || !formData.message) {
            showNotification('Veuillez remplir tous les champs', 'error');
            return;
        }
        
        // Validation email
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(formData.email)) {
            showNotification('Veuillez entrer une adresse email valide', 'error');
            return;
        }
        
        // Animation d'envoi
        btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Envoi en cours...';
        btn.disabled = true;
        
        // Envoi avec Formspree
        fetch(`https://formspree.io/f/${window.FORMSPREE_ID}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                name: formData.name,
                email: formData.email,
                subject: `[Portfolio] ${formData.subject}`,
                message: `Nom: ${formData.name}\nEmail: ${formData.email}\n\nMessage:\n${formData.message}\n\n---\nEnvoy√© depuis le portfolio estebanvial.github.io`
            })
        })
        .then(response => {
            if (response.ok) {
                // Succ√®s
                btn.innerHTML = '<i class="fas fa-check"></i> Message envoy√© !';
                btn.style.background = 'linear-gradient(135deg, #10b981, #059669)';
                
                showNotification('Message envoy√© avec succ√®s ! Je vous r√©pondrai rapidement.', 'success');
                
                // Reset du formulaire et bouton
                setTimeout(function() {
                    btn.innerHTML = originalText;
                    btn.disabled = false;
                    btn.style.background = '';
                    contactForm.reset();
                }, 3000);
                
            } else {
                throw new Error(`Erreur HTTP: ${response.status}`);
            }
        })
        .catch(error => {
            console.error('Erreur envoi formulaire:', error);
            
            // Erreur - proposer solution de secours
            btn.innerHTML = '<i class="fas fa-exclamation-triangle"></i> Erreur d\'envoi';
            btn.style.background = 'linear-gradient(135deg, #ef4444, #dc2626)';
            
            showNotification('Erreur lors de l\'envoi. Cliquez ci-dessous pour utiliser votre client email.', 'error');
            
            // Cr√©er un bouton de secours avec mailto
            setTimeout(function() {
                btn.innerHTML = '<i class="fas fa-envelope"></i> Ouvrir client email';
                btn.style.background = 'linear-gradient(135deg, #f59e0b, #d97706)';
                
                btn.onclick = function(e) {
                    e.preventDefault();
                    const subject = encodeURIComponent(`[Portfolio] ${formData.subject}`);
                    const body = encodeURIComponent(
                        `Nom: ${formData.name}\n` +
                        `Email: ${formData.email}\n\n` +
                        `Message:\n${formData.message}\n\n` +
                        `---\nEnvoy√© depuis le portfolio estebanvial.github.io`
                    );
                    
                    window.location.href = `mailto:esteban.vialmontpellier@gmail.com?subject=${subject}&body=${body}`;
                    
                    setTimeout(function() {
                        btn.innerHTML = originalText;
                        btn.disabled = false;
                        btn.style.background = '';
                        btn.onclick = null;
                        // R√©tablir l'√©v√©nement de soumission original
                        initializeContactForm();
                    }, 3000);
                };
            }, 2000);
        });
    });
}

// Fonction utilitaire pour les notifications (am√©lior√©e)
function showNotification(message, type = 'info') {
    // Supprimer les anciennes notifications
    const existingNotifications = document.querySelectorAll('.custom-notification');
    existingNotifications.forEach(notif => notif.remove());
    
    const notification = document.createElement('div');
    notification.className = 'custom-notification';
    notification.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        padding: 15px 20px;
        border-radius: 10px;
        color: white;
        font-weight: bold;
        z-index: 10000;
        max-width: 350px;
        transform: translateX(100%);
        transition: transform 0.3s ease;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(10px);
        border-left: 4px solid rgba(255, 255, 255, 0.3);
        font-size: 14px;
        line-height: 1.4;
    `;
    
    // Couleurs et ic√¥nes selon le type
    let icon = '';
    switch(type) {
        case 'success':
            notification.style.background = 'linear-gradient(135deg, #10b981, #059669)';
            icon = '<i class="fas fa-check-circle" style="margin-right: 8px;"></i>';
            break;
        case 'error':
            notification.style.background = 'linear-gradient(135deg, #ef4444, #dc2626)';
            icon = '<i class="fas fa-exclamation-circle" style="margin-right: 8px;"></i>';
            break;
        case 'warning':
            notification.style.background = 'linear-gradient(135deg, #f59e0b, #d97706)';
            icon = '<i class="fas fa-exclamation-triangle" style="margin-right: 8px;"></i>';
            break;
        default:
            notification.style.background = 'linear-gradient(135deg, #3b82f6, #1d4ed8)';
            icon = '<i class="fas fa-info-circle" style="margin-right: 8px;"></i>';
    }
    
    notification.innerHTML = icon + message;
    document.body.appendChild(notification);
    
    // Animation d'entr√©e
    setTimeout(() => notification.style.transform = 'translateX(0)', 100);
    
    // Suppression automatique
    const duration = type === 'error' ? 6000 : 4000; // Plus long pour les erreurs
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            if (document.body.contains(notification)) {
                document.body.removeChild(notification);
            }
        }, 300);
    }, duration);
}

// Gestion des modals de projets
function initializeProjectModals() {
    // Donn√©es d√©taill√©es des projets
    const projectData = {
        project1: {
            title: "Modernisation Infrastructure NevaOne",
            category: "Infrastructure R√©seau",
            description: "Refonte compl√®te de l'infrastructure r√©seau de l'entreprise NevaOne avec mise en place d'une architecture moderne et s√©curis√©e.",
            context: "L'infrastructure existante de NevaOne √©tait vieillissante et pr√©sentait des failles de s√©curit√©. Le projet consistait √† moderniser l'ensemble tout en maintenant la continuit√© de service.",
            technologies: ["Fortinet FortiGate 600E", "Aruba 2930F Switches", "VMware vSphere 7.0", "VLAN Segmentation", "QoS Implementation"],
            missions: [
                "Audit de l'infrastructure existante et identification des points faibles",
                "Conception de la nouvelle architecture r√©seau avec segmentation VLAN",
                "Configuration des √©quipements Fortinet et Aruba",
                "Migration progressive des services sans interruption",
                "Tests de performance et de s√©curit√©",
                "Formation des √©quipes sur les nouveaux √©quipements",
                "Documentation compl√®te de l'infrastructure"
            ],
            results: [
                "Augmentation de 300% de la bande passante disponible",
                "R√©duction de 95% des incidents r√©seau",
                "Am√©lioration de la s√©curit√© avec segmentation des r√©seaux",
                "Temps de r√©ponse divis√© par 3",
                "Infrastructure pr√™te pour la croissance future"
            ],
            duration: "6 mois",
            team: "3 personnes"
        },
        project2: {
            title: "Audit de S√©curit√© & Durcissement",
            category: "Cybers√©curit√©",
            description: "Analyse compl√®te des vuln√©rabilit√©s de l'infrastructure et mise en place de mesures de s√©curisation avanc√©es selon les standards ANSSI.",
            context: "Face aux menaces cybers√©curit√© croissantes, NevaOne souhaitait renforcer sa posture de s√©curit√© et se conformer aux bonnes pratiques.",
            technologies: ["Nessus Professional", "PfSense", "Fail2Ban", "Let's Encrypt SSL", "Suricata IDS", "ClamAV"],
            missions: [
                "Scan de vuln√©rabilit√©s avec Nessus sur l'ensemble du parc",
                "Analyse des logs et identification des tentatives d'intrusion",
                "Durcissement des serveurs Linux selon les guides ANSSI",
                "Configuration avanc√©e du firewall PfSense",
                "Mise en place d'un syst√®me de d√©tection d'intrusion",
                "Chiffrement SSL/TLS sur tous les services web",
                "Formation des utilisateurs aux bonnes pratiques"
            ],
            results: [
                "85% des vuln√©rabilit√©s critiques corrig√©es",
                "Mise en place du chiffrement end-to-end",
                "D√©tection proactive des tentatives d'intrusion",
                "Conformit√© aux recommandations ANSSI",
                "R√©duction de 90% des alertes de s√©curit√©"
            ],
            duration: "4 mois",
            team: "2 personnes"
        },
        project3: {
            title: "Plateforme de Monitoring Centralis√©e",
            category: "Supervision",
            description: "D√©ploiement d'une solution de supervision compl√®te permettant le monitoring temps r√©el de l'infrastructure avec alerting automatis√©.",
            context: "L'absence de monitoring centralis√© rendait difficile la d√©tection proactive des probl√®mes. Il fallait une solution scalable et intuitive.",
            technologies: ["Grafana", "Prometheus", "InfluxDB", "Telegraf", "AlertManager", "Node Exporter"],
            missions: [
                "Installation et configuration de la stack de monitoring",
                "Cr√©ation de dashboards personnalis√©s par service",
                "Configuration d'alertes intelligentes avec escalade",
                "Int√©gration avec les √©quipements r√©seau (SNMP)",
                "Monitoring des performances applicatives",
                "Formation des √©quipes √† l'utilisation des dashboards",
                "Documentation des proc√©dures de supervision"
            ],
            results: [
                "Visibilit√© temps r√©el sur 100% de l'infrastructure",
                "R√©duction de 70% du temps de r√©solution des incidents",
                "10 dashboards m√©tier cr√©√©s",
                "Alertes proactives 24/7",
                "Am√©lioration de la satisfaction utilisateur"
            ],
            duration: "3 mois",
            team: "2 personnes"
        },
        project4: {
            title: "Migration vers Infrastructure Virtualis√©e",
            category: "Virtualisation",
            description: "Migration compl√®te des serveurs physiques vers un environnement virtualis√© VMware avec haute disponibilit√© et sauvegarde automatis√©e.",
            context: "Les serveurs physiques vieillissants g√©n√©raient des co√ªts √©lev√©s et des risques de panne. La virtualisation permettait d'optimiser les ressources.",
            technologies: ["VMware vSphere 7.0", "vCenter Server", "VMotion", "Docker", "SAN iSCSI", "Veeam Backup"],
            missions: [
                "Audit des serveurs physiques et planification de la migration",
                "Installation et configuration de l'infrastructure VMware",
                "Migration P2V (Physical to Virtual) des serveurs critiques",
                "Configuration de la haute disponibilit√© et du load balancing",
                "Mise en place de la sauvegarde automatis√©e",
                "Tests de disaster recovery",
                "Formation des √©quipes √† la gestion virtualis√©e"
            ],
            results: [
                "12 serveurs physiques migr√©s vers 8 VMs optimis√©es",
                "Am√©lioration des performances de 150%",
                "R√©duction des co√ªts √©nerg√©tiques de 40%",
                "Haute disponibilit√© avec 99.9% d'uptime",
                "Sauvegarde automatis√©e quotidienne"
            ],
            duration: "5 mois",
            team: "3 personnes"
        },
        project5: {
            title: "Scripts d'Automatisation Syst√®me",
            category: "Automatisation",
            description: "D√©veloppement d'une suite de scripts pour automatiser les t√¢ches d'administration quotidiennes et la maintenance pr√©ventive.",
            context: "Les t√¢ches manuelles r√©p√©titives consommaient beaucoup de temps et √©taient sources d'erreurs. L'automatisation √©tait n√©cessaire pour l'efficacit√©.",
            technologies: ["Bash Scripts", "PowerShell", "Python", "Cron Jobs", "Ansible", "Git"],
            missions: [
                "Identification des t√¢ches r√©p√©titives √† automatiser",
                "D√©veloppement de scripts de sauvegarde automatis√©e",
                "Cr√©ation de scripts de monitoring et d'alerting",
                "Automatisation du d√©ploiement d'applications",
                "Scripts de maintenance pr√©ventive",
                "Mise en place d'un syst√®me de versioning",
                "Documentation et formation des √©quipes"
            ],
            results: [
                "25+ scripts d√©velopp√©s et d√©ploy√©s",
                "R√©duction de 80% du temps consacr√© aux t√¢ches r√©p√©titives",
                "√âlimination compl√®te des erreurs manuelles",
                "Maintenance automatis√©e 24/7",
                "Am√©lioration de la productivit√© de l'√©quipe"
            ],
            duration: "Projet continu",
            team: "1 personne"
        },
        project6: {
            title: "HomeLab Cybers√©curit√©",
            category: "Lab Personnel",
            description: "Cr√©ation d'un laboratoire personnel d√©di√© √† l'apprentissage et aux tests de cybers√©curit√©, pentesting et analyse forensique.",
            context: "Pour approfondir mes comp√©tences en cybers√©curit√©, j'ai cr√©√© un environnement de test s√©curis√© permettant l'exp√©rimentation et la formation continue.",
            technologies: ["Proxmox VE", "Kali Linux", "Metasploit", "Wireshark", "DVWA", "VulnHub VMs", "pfSense", "Splunk"],
            missions: [
                "Installation et configuration de Proxmox comme hyperviseur",
                "D√©ploiement de machines virtuelles vuln√©rables pour les tests",
                "Configuration d'un r√©seau isol√© pour les tests de p√©n√©tration",
                "Installation d'outils de cybers√©curit√© (Kali, Metasploit, etc.)",
                "Cr√©ation de sc√©narios d'attaque et de d√©fense",
                "Analyse forensique sur des √©chantillons de malware",
                "Veille technologique et test des derni√®res vuln√©rabilit√©s"
            ],
            results: [
                "15 VMs de test op√©rationnelles",
                "Am√©lioration continue des comp√©tences en cybers√©curit√©",
                "Ma√Ætrise des outils de pentesting",
                "Exp√©rience pratique en analyse forensique",
                "Pr√©paration aux certifications cybers√©curit√©"
            ],
            duration: "Projet personnel continu",
            team: "Personnel"
        }
    };

    // Fonction pour ouvrir un modal de projet
    window.openProjectModal = function(projectId) {
        const modal = document.getElementById('projectModal');
        const modalContent = document.getElementById('modalContent');
        const project = projectData[projectId];
        
        if (!project) return;
        
        modalContent.innerHTML = '<div class="modal-header">' +
            '<h2 class="modal-title">' + project.title + '</h2>' +
            '<p class="modal-subtitle">' + project.category + '</p>' +
            '</div>' +
            '<div class="modal-body">' +
            '<div class="project-details">' +
            '<h4>üìã Description du projet</h4>' +
            '<p style="color: var(--text-secondary); margin-bottom: 1.5rem;">' + project.description + '</p>' +
            '<h4>üéØ Contexte</h4>' +
            '<p style="color: var(--text-secondary); margin-bottom: 1.5rem;">' + project.context + '</p>' +
            '<h4>üõ†Ô∏è Technologies utilis√©es</h4>' +
            '<div style="display: flex; flex-wrap: wrap; gap: 0.5rem; margin-bottom: 1.5rem;">' +
            project.technologies.map(function(tech) { return '<span class="tech-tag">' + tech + '</span>'; }).join('') +
            '</div>' +
            '<h4>‚ö° Missions r√©alis√©es</h4>' +
            '<ul style="margin-bottom: 1.5rem;">' +
            project.missions.map(function(mission) { return '<li>' + mission + '</li>'; }).join('') +
            '</ul>' +
            '<div class="project-results">' +
            '<h4>üéâ R√©sultats obtenus</h4>' +
            '<ul>' +
            project.results.map(function(result) { return '<li>' + result + '</li>'; }).join('') +
            '</ul>' +
            '</div>' +
            '<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-top: 1.5rem; padding-top: 1.5rem; border-top: 1px solid rgba(59, 130, 246, 0.2);">' +
            '<div>' +
            '<strong style="color: var(--accent);">‚è±Ô∏è Dur√©e:</strong>' +
            '<span style="color: var(--text-secondary);"> ' + project.duration + '</span>' +
            '</div>' +
            '<div>' +
            '<strong style="color: var(--accent);">üë• √âquipe:</strong>' +
            '<span style="color: var(--text-secondary);"> ' + project.team + '</span>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '</div>';
        
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
    };

    // Fonction pour fermer le modal
    window.closeProjectModal = function() {
        const modal = document.getElementById('projectModal');
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    };

    // Fermer le modal en cliquant √† l'ext√©rieur
    window.addEventListener('click', function(event) {
        const modal = document.getElementById('projectModal');
        if (event.target === modal) {
            window.closeProjectModal();
        }
    });

    // Fermer le modal avec la touche Escape
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            window.closeProjectModal();
        }
    });
}

// Theme Toggle (Dark/Light Mode)
function initializeThemeToggle() {
    const themeToggle = document.getElementById('themeToggle');
    if (!themeToggle) return;
    
    let currentTheme = 'dark'; // Par d√©faut sombre
    
    function setTheme(theme) {
        currentTheme = theme;
        document.documentElement.setAttribute('data-theme', theme);
        
        const icon = themeToggle.querySelector('i');
        if (theme === 'dark') {
            icon.className = 'fas fa-sun';
            themeToggle.title = 'Passer en mode clair';
        } else {
            icon.className = 'fas fa-moon';
            themeToggle.title = 'Passer en mode sombre';
        }
    }
    
    // Initialiser le th√®me
    setTheme(currentTheme);
    
    // Event listener pour le toggle
    themeToggle.addEventListener('click', function() {
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        setTheme(newTheme);
    });
}

// Menu mobile toggle
window.toggleMobileMenu = function() {
    const navLinks = document.querySelector('.nav-links');
    if (navLinks) {
        navLinks.classList.toggle('mobile-active');
    }
};

// Fonctions utilitaires
function debounce(func, wait) {
    let timeout;
    return function executedFunction() {
        const args = Array.prototype.slice.call(arguments);
        const later = function() {
            clearTimeout(timeout);
            func.apply(null, args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// Performance: debounce du scroll
const debouncedScroll = debounce(function() {
    // Actions de scroll moins critiques peuvent √™tre plac√©es ici
}, 10);

window.addEventListener('scroll', debouncedScroll);

// Animations au scroll am√©lior√©es
function initializeAdvancedScrollAnimations() {
    // Animation des compteurs
    const animateCounters = function() {
        const counters = document.querySelectorAll('.stat span');
        
        counters.forEach(function(counter) {
            const target = counter.textContent;
            const number = parseInt(target.replace(/\D/g, ''));
            
            if (number && !counter.classList.contains('animated')) {
                counter.classList.add('animated');
                let current = 0;
                const increment = number / 50;
                
                const timer = setInterval(function() {
                    current += increment;
                    if (current >= number) {
                        counter.textContent = target;
                        clearInterval(timer);
                    } else {
                        counter.textContent = Math.floor(current) + target.replace(/\d/g, '');
                    }
                }, 50);
            }
        });
    };
    
    // Observer pour les compteurs
    const counterObserver = new IntersectionObserver(function(entries) {
        entries.forEach(function(entry) {
            if (entry.isIntersecting) {
                animateCounters();
            }
        });
    }, { threshold: 0.5 });
    
    document.querySelectorAll('.project-stats').forEach(function(stats) {
        counterObserver.observe(stats);
    });
}

// Gestion des performances et lazy loading
function initializePerformanceOptimizations() {
    // Lazy loading des images
    const images = document.querySelectorAll('img[data-src]');
    const imageObserver = new IntersectionObserver(function(entries) {
        entries.forEach(function(entry) {
            if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.dataset.src;
                img.removeAttribute('data-src');
                imageObserver.unobserve(img);
            }
        });
    });
    
    images.forEach(function(img) {
        imageObserver.observe(img);
    });
}

// Initialisation des fonctionnalit√©s avanc√©es
function initializeAdvancedFeatures() {
    initializeAdvancedScrollAnimations();
    initializePerformanceOptimizations();
    
    // Message de bienvenue
    setTimeout(function() {
        showNotification('Bienvenue sur mon portfolio !', 'info');
    }, 2000);
}

// Gestion des erreurs globales
window.addEventListener('error', function(e) {
    console.error('Erreur JavaScript:', e.error);
});

// Fonction de nettoyage pour √©viter les fuites m√©moire
function cleanup() {
    // Nettoyer les timers
    if (window.typingTimer) {
        clearTimeout(window.typingTimer);
    }
    if (window.notificationTimer) {
        clearTimeout(window.notificationTimer);
    }
}

// Nettoyage avant d√©chargement de la page
window.addEventListener('beforeunload', cleanup);

// Fonction pour redimensionnement de fen√™tre
function handleResize() {
    const hero = document.querySelector('.hero');
    if (hero) {
        // Ajustements responsive si n√©cessaire
    }
}

// Debounce du redimensionnement
const debouncedResize = debounce(handleResize, 250);
window.addEventListener('resize', debouncedResize);

// Gestion du focus pour l'accessibilit√©
document.addEventListener('keydown', function(e) {
    if (e.key === 'Tab') {
        document.body.classList.add('using-keyboard');
    }
});

document.addEventListener('mousedown', function() {
    document.body.classList.remove('using-keyboard');
});

// Fonction pour am√©liorer les performances d'animation
function optimizeAnimations() {
    // R√©duire les animations si l'utilisateur pr√©f√®re
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        const style = document.createElement('style');
        style.textContent = `
            *, *::before, *::after {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        `;
        document.head.appendChild(style);
    }
}

// Initialiser les optimisations
optimizeAnimations();

// Lancer l'initialisation avanc√©e apr√®s le chargement complet
window.addEventListener('load', function() {
    try {
        initializeAdvancedFeatures();
    } catch (error) {
        console.error('Erreur lors de l\'initialisation avanc√©e:', error);
    }
});

// Message final pour confirmer le chargement
console.log('üöÄ Portfolio Esteban Vial-Montpellier - JavaScript enti√®rement charg√© et fonctionnel!');

/* =================================================================
   CORRECTION JAVASCRIPT POUR LE MENU MOBILE
   ================================================================= */

/* 
Ajoutez cette fonction dans votre script.js si elle n'existe pas d√©j√† :*/

window.toggleMobileMenu = function() {
    const navLinks = document.querySelector('.nav-links');
    const body = document.body;
    
    if (navLinks) {
        const isOpen = navLinks.classList.contains('mobile-active');
        
        if (isOpen) {
            navLinks.classList.remove('mobile-active');
            body.style.overflow = 'auto';
        } else {
            navLinks.classList.add('mobile-active');
            body.style.overflow = 'hidden'; // Emp√™che le scroll en arri√®re-plan
        }
    }
};

// Fermer le menu en cliquant sur un lien
document.querySelectorAll('.nav-links a').forEach(link => {
    link.addEventListener('click', () => {
        const navLinks = document.querySelector('.nav-links');
        if (navLinks && navLinks.classList.contains('mobile-active')) {
            navLinks.classList.remove('mobile-active');
            document.body.style.overflow = 'auto';
        }
    });
});

